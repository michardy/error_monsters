#[cfg(test)]
mod tests {
    #[test]
    fn it_works() {
    }
}

#[derive(Clone, Copy)]
pub struct Map {
    left_side_map: [[u8; 20]; 11],
    right_side_map: [[u8; 20]; 11],
    end_map: &'static str,
    cur_row: u8
}

impl Map {
    pub fn new() -> Map {
        Map {
            left_side_map: [
                [32, 32, 32, 32, 32, 32, 32, 32, 47, 92, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
                [32, 32, 32, 32, 32, 32, 32, 47, 32, 32, 92, 32, 32, 32, 32, 32, 32, 32, 32, 32],
                [32, 32, 32, 32, 32, 32, 47, 126, 126, 126, 126, 92, 32, 32, 32, 32, 32, 32, 32, 32],
                [92, 32, 32, 32, 32, 47, 32, 32, 32, 32, 32, 32, 92, 32, 32, 32, 32, 32, 32, 32],
                [32, 92, 32, 32, 47, 32, 32, 32, 32, 32, 32, 32, 32, 92, 32, 32, 32, 32, 32, 32],
                [32, 32, 92, 47, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 92, 32, 32, 32, 32, 32],
                [32, 32, 32, 92, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 92, 32, 32, 32, 32],
                [126, 126, 126, 126, 92, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 92, 32, 32, 32],
                [32, 32, 32, 32, 32, 92, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 92, 32, 32],
                [32, 32, 32, 32, 32, 32, 92, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 92, 32],
                [32, 32, 32, 32, 32, 32, 32, 92, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32]
            ],
            right_side_map: [
                [32, 32, 32, 32, 32, 32, 92, 32, 95, 95, 95, 95, 95, 95, 32, 47, 32, 32, 32, 32],
                [32, 32, 32, 32, 32, 92, 32, 47, 32, 32, 32, 32, 32, 32, 92, 32, 47, 32, 32, 32],
                [32, 32, 32, 32, 92, 32, 47, 32, 32, 32, 32, 32, 32, 32, 32, 92, 32, 47, 32, 32],
                [32, 32, 32, 92, 32, 47, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 92, 32, 47, 32],
                [32, 32, 95, 32, 40, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 41, 32, 95],
                [32, 32, 32, 32, 32, 92, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 47, 32, 32, 32],
                [32, 32, 32, 47, 32, 32, 92, 32, 32, 32, 32, 32, 32, 32, 32, 47, 32, 32, 92, 32],
                [32, 32, 32, 32, 32, 32, 32, 92, 95, 95, 95, 95, 95, 95, 47, 32, 32, 92, 32, 32],
                [32, 32, 32, 32, 47, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 92, 32, 32, 32],
                [32, 32, 32, 32, 32, 47, 32, 47, 32, 47, 32, 47, 32, 32, 32, 32, 32, 32, 32, 32],
                [32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32]
            ],
            end_map: include_str!("end.txt"),
            cur_row:0u8
        }
    }
    pub fn print_lside(self){
        if self.cur_row < 11 {
            print!("{}", String::from_utf8_lossy(
                &(self.left_side_map[self.cur_row as usize])
            ));
        }
    }
    pub fn print_rside(&mut self){
        if self.cur_row < 11 {
            print!("{}", String::from_utf8_lossy(
                &(self.right_side_map[self.cur_row as usize])
            ));
            self.cur_row += 1;
        }
    }
    pub fn print_end(self){
        print!("{}", self.end_map);
    }
}
